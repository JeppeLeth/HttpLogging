apply plugin: 'java'
apply plugin: 'com.novoda.bintray-release' // must be applied after your artifact generating plugin (eg. java / com.android.library) // https://github.com/novoda/bintray-release

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

//ext {//http://inthecheesefactory.com/blog/how-to-upload-library-to-jcenter-maven-central-as-dependency/en
//    bintrayRepo = 'maven'
//    bintrayName = 'ok-http-logging'
//
//    publishedGroupId = 'com.jleth.util'
//    libraryName = 'OkHttpLogging'
//    artifact = 'okhttp2-logging'
//
//    libraryDescription = 'HTTP logging intercepter for OkHttp2'
//
//    siteUrl = 'https://github.com/JeppeLeth/HttpLogging'
//    gitUrl = 'https://github.com/JeppeLeth/HttpLogging.git'
//
//    libraryVersion = '1.0.0'
//
//    developerId = 'jeppeleth'
//    developerName = 'Jeppe Leth Nielsen'
//    developerEmail = 'jeppe.leth@gmail.com'
//
//    licenseName = 'The Apache Software License, Version 2.0'
//    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//    allLicenses = ["Apache-2.0"]
//}

/*android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.links("http://d.android.com/reference/");
    }
    task("bundle${variant.name.capitalize()}Javadoc", type: Jar) {
        description "Bundles Javadoc into zip for $variant.name."
        classifier = "javadoc"
        destinationDir = file("build/outputs")
        from tasks["generate${variant.name.capitalize()}Javadoc"]
    }
}*/

publish { // https://github.com/novoda/bintray-release/wiki/Configuration-of-the-publish-closure

    bintrayUser = properties.getProperty('bintray.user')
    bintrayKey = properties.getProperty('bintray.apikey')

    dryRun = false // true will not upload
    autoPublish = false

    repoName = 'maven' // Default
    userOrg = 'jeppeleth'

    groupId = 'com.jleth.util'
    artifactId = 'okhttp2-logging'
    publishVersion = '1.0.0'

    desc = 'HTTP logging intercepter for OkHttp2'
    website = 'https://github.com/JeppeLeth/HttpLogging'
    licences = ['Apache-2.0'] // Default
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar
    archives javadocJar
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    provided 'com.squareup.okhttp:okhttp:2.7.0'
}

//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'